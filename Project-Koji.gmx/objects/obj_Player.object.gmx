<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///inicijalizacija varijabli
var_grav = 0.2;
var_hspeed = 0;
var_vspeed = 0;
var_move_speed = 4;
var_jump_speed = 6;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//citanje inputa //vraca 1 ili 0
var_key_left = -keyboard_check(vk_left); //ord("A") //munus se dodaje zato sto se mnozi sa brzinom kretanja -1*brzina kretanja ako je pritisnuto ili 0*brzina kretanja ako nije
var_key_right = keyboard_check(vk_right); //ord("D)
var_key_jump = keyboard_check_pressed(vk_space); //pressed je dodato da se ne bi skakalo konstantno dok je pritisnuto space (pressed = da li je sada pritisnuto, a nije bilo pritisnuto u step-u pre)
var_key_run = keyboard_check(vk_control);

//reakcije na input
var_move = var_key_left + var_key_right; // -1 ako je levo, 1 ako je desno, 0 ako je nijedno ili oba
var_hspeed = var_move * var_move_speed;
if (var_vspeed &lt; 10)
{
    var_vspeed += var_grav; //ubrzava gravitaviju sve dok ne dodje do 10 pixels/s
}

if (place_meeting(x, y+1,obj_Wall)) // da li postoji obj_test_tile jedan pixel ispod y koordinate igraca
{
    var_vspeed = var_key_jump * -var_jump_speed;
}

//horizontalna kolizija
if (place_meeting(x+var_hspeed,y,obj_Wall))
{
    while(!place_meeting(x+sign(var_hspeed),y,obj_Wall))//sign daje 1 ili -1 u zavisnosti da li je broj pozitivan ili negativan //proverava da li je sledeci pixel prazan
    {
        x += sign(var_hspeed);
    }
    var_hspeed = 0;
}

//vertikalna kolizija
if (place_meeting(x,y+var_vspeed,obj_Wall))
{
    while(!place_meeting(x,y+sign(var_vspeed),obj_Wall))
    {
        y += sign(var_vspeed);
    }
    var_vspeed = 0;
}

x += var_hspeed;
y += var_vspeed;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>16,16</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>
